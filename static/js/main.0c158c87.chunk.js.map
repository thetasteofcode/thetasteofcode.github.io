{"version":3,"sources":["components/ScrollHandler.js","components/LandingImage.js","components/LandingBox.js","components/LandingPage.js","components/SiteLogo.js","components/MenuItem.js","components/Menu.js","components/ContentItem.js","components/ContentPage.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollHandler","location","useEffect","element","document","getElementById","hash","setTimeout","window","scrollTo","behavior","top","offsetTop","propTypes","PropTypes","shape","string","isRequired","withRouter","LandingImage","title","mouse","myImage","useRef","imageLetter","substr","toUpperCase","animateImage","current","getBoundingClientRect","rect","y","xPos","Math","abs","innerHeight","yPos","x","innerWidth","gsap","to","rotationY","rotationX","ease","className","ref","LandingBox","summary","LandingPage","SiteLogo","firstLetter","rest","length","onMouseEnter","duration","letterSpacing","marginLeft","opacity","onMouseLeave","MenuItem","id","activateContent","onClick","contentItems","array","count","number","func","Menu","filter","contentItem","index","map","content","ContentItem","activeIndex","iconLetter","ContentPage","Footer","Date","getFullYear","App","useState","subject","setSubject","setContentItems","setSummary","activeContent","setActiveContent","appContainer","React","useMouse","enterDelay","leaveDelay","a","fetchSubject","fetchedSubject","wiki","page","fetchContent","fetchedContentItems","fetchSummary","fetchedSummary","buildWebsite","random","sub","key","contentItemList","push","console","log","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c158c87.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollHandler = ({ location }) => {\r\n\r\n  useEffect(() => {\r\n    const element = document.getElementById(location.hash);\r\n\r\n    //Animate scroll to the desired element\r\n    setTimeout(() => {\r\n\r\n      window.scrollTo({\r\n        behavior: element ? \"smooth\" : \"auto\",\r\n        top: element ? element.offsetTop - 76 : 0 //Subtract menu bar height\r\n      });\r\n      \r\n    }, 100);\r\n  }, [location]);\r\n\r\n  return null;\r\n};\r\n\r\nScrollHandler.propTypes = \r\n{\r\n  location: PropTypes.shape({hash: PropTypes.string}).isRequired\r\n};\r\n\r\nexport default withRouter(ScrollHandler);\r\n","import { useEffect, useRef } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { gsap } from \"gsap\";\r\n\r\n\r\nconst LandingImage = ({ title, mouse }) => {\r\n\r\n    const myImage = useRef(null);\r\n    const imageLetter = title.substr(0, 1).toUpperCase();\r\n\r\n    useEffect(() => {\r\n        animateImage(myImage.current.getBoundingClientRect());\r\n    });\r\n\r\n    //--------------------------------------------------\r\n    // Handle landing image animation based on mouse pos\r\n    //--------------------------------------------------\r\n    const animateImage = (rect) =>\r\n    {\r\n        if (mouse.y != null)\r\n        {\r\n            const xPos = Math.abs(mouse.y - rect.y) < window.innerHeight / 2 ? (mouse.y - rect.y) / rect.y * -0.25 : 0;\r\n            const yPos = Math.abs(mouse.x - rect.x) < window.innerWidth / 1.75 ? (mouse.x - rect.x) / rect.x * -0.25 : 0;\r\n\r\n            gsap.to('.LandingImage', {\r\n                rotationY: yPos * 100, \r\n                rotationX: xPos * 100,\r\n                ease: 'power1.out'\r\n            });\r\n        }\r\n        else\r\n        {\r\n            gsap.to('.LandingImage', {\r\n                rotationY: 0, \r\n                rotationX: 0,\r\n                ease: 'power1.out'\r\n            });\r\n        }\r\n    }   \r\n \r\n    return (\r\n        <div className=\"LandingImage\" ref={myImage}>\r\n            {imageLetter}\r\n        </div>\r\n    )\r\n}\r\n\r\nLandingImage.propTypes = \r\n{\r\n    title: PropTypes.string,\r\n    mouse : PropTypes.object\r\n};\r\n\r\nexport default LandingImage\r\n","import LandingImage from \"./LandingImage\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LandingBox = ({ title, summary, mouse }) => {\r\n    return (\r\n        <div className=\"LandingBox\">\r\n            <LandingImage title={title} mouse={mouse}/>\r\n            <div className=\"bordered-box\">\r\n                <div className=\"landing-text-container\">\r\n                    <h1 className=\"landing-title\">{title}</h1>\r\n                    <p>\r\n                        {summary}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLandingBox.propTypes = \r\n{\r\n    title: PropTypes.string,\r\n    summary: PropTypes.string,\r\n    mouse : PropTypes.object\r\n};\r\n\r\nexport default LandingBox\r\n","import '../styles/LandingPage.css';\r\nimport LandingBox from './LandingBox';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LandingPage = ({ title, summary, mouse }) => {\r\n\r\n    return (\r\n        <div className=\"LandingPage\">\r\n            <LandingBox title={title} summary={summary} mouse={mouse}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nLandingPage.propTypes = \r\n{\r\n    title: PropTypes.string,\r\n    summary: PropTypes.string,\r\n    mouse : PropTypes.object\r\n};\r\n\r\nexport default LandingPage\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { gsap } from \"gsap\";\r\n\r\nconst SiteLogo = ({ title }) => {\r\n\r\n    const firstLetter = title.substr(0, 1).toUpperCase();\r\n    const rest = title.length < 20 ? title.substr(1, title.length - 1) : `${title.substr(1, 20)}...`;\r\n\r\n    //-------------------------------------------------\r\n    // Logo display animation\r\n    //-------------------------------------------------\r\n    const showFullLogo = () =>\r\n    {\r\n        gsap.to('.rest', {\r\n            duration: .4,\r\n            letterSpacing: '0px',\r\n            marginLeft: '0px',\r\n            opacity: '1',\r\n        });\r\n    }\r\n\r\n    //-------------------------------------------------\r\n    // Logo hide animation\r\n    //-------------------------------------------------\r\n    const hideLogo = () =>\r\n    {\r\n        gsap.to('.rest', {\r\n            duration: .4,\r\n            letterSpacing: '-12px',\r\n            marginLeft: '-10px',\r\n            opacity: '0',\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"site-logo\" onMouseEnter={showFullLogo} onMouseLeave={hideLogo}>\r\n            <div className=\"first-letter\">{firstLetter}</div>\r\n            <div className=\"rest\">{rest}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSiteLogo.propTypes = \r\n{\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SiteLogo\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MenuItem = ({ id, title, activateContent }) => \r\n{\r\n    return (\r\n        <Link to='/#content' className=\"MenuItem\" onClick={() => activateContent(id)}>\r\n            {title}\r\n        </Link>\r\n    )\r\n}\r\n\r\nMenuItem.propTypes = \r\n{\r\n    id: PropTypes.number,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default MenuItem\r\n","import '../styles/Menu.css';\r\nimport SiteLogo from \"./SiteLogo\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Menu = ({ title, contentItems, count, activateContent }) => {\r\n\r\n    return (\r\n        <div className=\"MenuBar\">\r\n            <SiteLogo title={title}/>\r\n            <div id=\"menu-item-container\">\r\n                {   \r\n                    contentItems.length > 0 &&\r\n                        contentItems.filter((contentItem, index) => index < count).map((contentItem, index) => (\r\n                            <MenuItem key={index} id={index} title={contentItem[\"title\"]} content={contentItem[\"content\"]} activateContent={activateContent} /> \r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSiteLogo.propTypes = \r\n{\r\n    title: PropTypes.string,\r\n    contentItems: PropTypes.array,\r\n    count: PropTypes.number,\r\n    activateContent: PropTypes.func\r\n};\r\n\r\nexport default Menu\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContentItem = ({ id, title, content, activeIndex }) => {\r\n\r\n    const iconLetter = title.substr(0, 1).toUpperCase();\r\n\r\n    return (\r\n        <div className={`ContentItem ${activeIndex === id ? \"active\" : \"\"}` }>\r\n            <div className=\"content-icon\">{iconLetter}</div>\r\n            <h1>{title}</h1>\r\n            <p>\r\n                {content}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nContentItem.propTypes = \r\n{\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    content: PropTypes.string,\r\n    activeIndex: PropTypes.number\r\n};\r\n\r\nexport default ContentItem\r\n","import '../styles/ContentPage.css';\r\nimport ContentItem from \"./ContentItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContentPage = ({ contentItems, count, activeIndex }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (contentItems.length > 0) &&\r\n                    <div id={`#content`} className=\"ContentPage\">\r\n                        {                    \r\n                            contentItems.filter((contentItem, index) => index < count).map((contentItem, index) => (\r\n                                <ContentItem key={index} id={index} activeIndex={activeIndex} title={contentItem[\"title\"]} content={contentItem[\"content\"]}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nContentPage.propTypes = \r\n{\r\n    contentItems: PropTypes.array,\r\n    count: PropTypes.number,\r\n    activeIndex: PropTypes.number\r\n};\r\n\r\nexport default ContentPage\r\n","import '../styles/Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            Noah made this &copy; { new Date().getFullYear() }\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport './App.css';\n\nimport ScrollHandler from './components/ScrollHandler';\nimport LandingPage from './components/LandingPage';\nimport Menu from './components/Menu';\nimport ContentPage from './components/ContentPage';\nimport Footer from './components/Footer';\n\nimport wiki from 'wikijs';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport useMouse from '@react-hook/mouse-position'\n\nconst App = () => {\n\n  var temp = [\n    {\n      \"title\":\"History\",\n      \"content\": \"The World Wide Web (WWW) was created in 1990 by the British CERN physicist Tim Berners-Lee.[1] On 30 April 1993, CERN announced that the World Wide Web would be free to use for anyone, contributing to the immense growth of the Web.[2] Before the introduction of the Hypertext Transfer Protocol (HTTP), other protocols such as File Transfer Protocol and the gopher protocol were used to retrieve individual files from a server. These protocols offer a simple directory structure which the user navigates and where they choose files to download. Documents were most often presented as plain text files without formatting or were encoded in word processor formats.\"\n    },\n    {\n      \"title\":\"Overview\",\n      \"content\":\"Websites can be used in various fashions: a personal website, a corporate website for a company, a government website, an organization website, etc. Websites can be the work of an individual, a business or other organization, and are typically dedicated to a particular topic or purpose. Any website can contain a hyperlink to any other website, so the distinction between individual sites, as perceived by the user, can be blurred.\\nSome websites require user registration or subscription to access content. Examples of subscription websites include many business sites, news websites, academic journal websites, gaming websites, file-sharing websites, message boards, web-based email, social networking websites, websites providing real-time stock market data, as well as sites providing various other services.\"\n    },\n    {\n      \"title\":\"Static website\",\n      \"content\":'A static website is one that has web pages stored on the server in the format that is sent to a client web browser. It is primarily coded in Hypertext Markup Language (HTML); Cascading Style Sheets (CSS) are used to control appearance beyond basic HTML. Images are commonly used to create the desired appearance and as part of the main content. Audio or video might also be considered \"static\" content if it plays automatically or is generally non-interactive. This type of website usually displays the same information to all visitors. Similar to handing out a printed brochure to customers or clients, a static website will generally provide consistent, standard information for an extended period of time. Although the website owner may make updates periodically, it is a manual process to edit the text, photos, and other content and may require basic website design skills and software. Simple forms or marketing examples of websites, such as classic website, a five-page website or a brochure website are often static websites, because they present pre-defined, static information to the user. This may include information about a company and its products and services through text, photos, animations, audio/video, and navigation menus.'\n    }\n  ]\n\n  const [subject, setSubject] = useState('website');\n  const [contentItems, setContentItems] = useState(temp);\n  const [summary, setSummary] = useState('A website (also written as web site) is a collection of web pages and related content that is identified by a common domain name and published on at least one web server. Notable examples are wikipedia.org, google.com, and amazon.com.');\n  const [activeContent, setActiveContent] = useState(-1);\n  const contentItemCount = 3;\n\n  const appContainer = React.useRef(null);\n\n  //--------------------------------------------------\n  // Get mouse position based on app container element\n  //--------------------------------------------------\n  const mouse = useMouse(appContainer, {\n    enterDelay: 100,\n    leaveDelay: 100,\n  })\n\n  //-------------------------------------------------\n  // Generate state based on the website subject\n  //-------------------------------------------------\n  useEffect(() => {\n\n    const buildWebsite = async () => {\n      const fetchedSubject = await fetchSubject();\n      setSubject(fetchedSubject);\n\n      //Get the page\n      const page = await wiki().page(fetchedSubject);\n      \n      const fetchedContentItems = await fetchContent(page);\n      setContentItems(fetchedContentItems);\n\n      const fetchedSummary = await fetchSummary(page);\n      setSummary(fetchedSummary);\n    }\n\n    buildWebsite();\n\n  }, []);\n\n  //-------------------------------------------------\n  // Fetches a random wiki article\n  //-------------------------------------------------\n  const fetchSubject = async () =>\n  {\n    const sub = await wiki().random(1);\n    return sub[0];\n  }\n\n  //-------------------------------------------------\n  // Fetches wiki content data\n  //-------------------------------------------------\n  const fetchContent = async (page) => \n  {\n    const content = await page.content();\n\n    //Grab the content items\n    var contentItemList = [];\n    for (const key in content) \n    {\n        contentItemList.push(content[key]);\n    }\n\n    console.log(contentItemList);\n\n    return contentItemList.filter(item => item[\"content\"].length > 0);\n  }\n\n  //-------------------------------------------------\n  // Fetches wiki summary\n  //-------------------------------------------------\n  const fetchSummary = async (page) =>\n  {\n    const summary = await page.summary();\n    return summary;\n  }\n\n  //-------------------------------------------------\n  // Sets the active content item\n  //-------------------------------------------------\n  const activateContent = (key) =>\n  {\n    setActiveContent(key);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\" ref={appContainer}>\n        <ScrollHandler/>\n        <Menu title={subject} contentItems={contentItems} count={contentItemCount} activateContent={activateContent}/>\n        <LandingPage title={subject} summary={summary} mouse={mouse}/>\n        <ContentPage contentItems={contentItems} count={contentItemCount} activeIndex={activeContent}/>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}